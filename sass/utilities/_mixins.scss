// MIXINS
@mixin viewport($value:device-width) {
  //@-moz-viewport { width: $value; }
  //@-webkit-viewport { width: $value; }
  @-ms-viewport { width: $value; }
  @-o-viewport { width: $value; }
  @viewport { width: $value; }
}

@mixin text-size-adjust($value) {
  -moz-text-size-adjust: $value;
  -ms-text-size-adjust: $value;
  -webkit-text-size-adjust: $value;
  text-size-adjust: $value;
}

@mixin font-smoothing($value: antialiased) {
  @if $value == antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  } @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

@mixin calc($property, $value) {
  #{$property}: -moz-calc(#{$value});
  #{$property}: -webkit-calc(#{$value});
  #{$property}: calc(#{$value});
}

@mixin touch-action($value) {
  -ms-touch-action: $value;
  touch-action: $value;
}

@mixin letter-spacing($val-spacing, $font-size, $units: px) {
  @if $units == px {
    letter-spacing: ($val-spacing * $font-size / 1000) + $units;
  }
  @if $units == em {
    letter-spacing: ($val-spacing / 1000) + $units;
  }
}

@mixin line-height($line-height, $font-size, $unit: multiplier) {
  @if $unit == multiplier {
    line-height: round(percentage($line-height / $font-size)) / 100%;
  }
  @if $unit == '%' {
    line-height: round(percentage($line-height / $font-size));
  }
  @if $unit == no-round {
    line-height: $line-height / $font-size;
  }
}

@mixin triangle($size, $color, $direction) {
  $width: nth($size, 1);
  $height: nth($size, length($size));
  $foreground-color: nth($color, 1);
  $background-color: if(length($color) == 2, nth($color, 2), transparent);
  height: 0;
  width: 0;

  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {
    $width: $width / 2;
    $height: if(length($size) > 1, $height, $height / 2);

    @if $direction == up {
      border-bottom: $height solid $foreground-color;
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
    } @else if $direction == right {
      border-bottom: $width solid $background-color;
      border-left: $height solid $foreground-color;
      border-top: $width solid $background-color;
    } @else if $direction == down {
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
      border-top: $height solid $foreground-color;
    } @else if $direction == left {
      border-bottom: $width solid $background-color;
      border-right: $height solid $foreground-color;
      border-top: $width solid $background-color;
    }
  } @else if ($direction == up-right) or ($direction == up-left) {
    border-top: $height solid $foreground-color;

    @if $direction == up-right {
      border-left: $width solid $background-color;
    } @else if $direction == up-left {
      border-right: $width solid $background-color;
    }
  } @else if ($direction == down-right) or ($direction == down-left) {
    border-bottom: $height solid $foreground-color;

    @if $direction == down-right {
      border-left: $width solid $background-color;
    } @else if $direction == down-left {
      border-right: $width solid $background-color;
    }
  } @else if ($direction == inset-up) {
    border-color: $background-color $background-color $foreground-color;
    border-style: solid;
    border-width: $height $width;
  } @else if ($direction == inset-down) {
    border-color: $foreground-color $background-color $background-color;
    border-style: solid;
    border-width: $height $width;
  } @else if ($direction == inset-right) {
    border-color: $background-color $background-color $background-color $foreground-color;
    border-style: solid;
    border-width: $width $height;
  } @else if ($direction == inset-left) {
    border-color: $background-color $foreground-color $background-color $background-color;
    border-style: solid;
    border-width: $width $height;
  }
}

@mixin grid-column($parent-class, $child-class, $container-width-px, $number-columns, $margin-right-px, $margin-bottom-px: $margin-right-px, $unit: 'percent') {
  #{$parent-class} {
    &:after {
      clear: both;
      content: '';
      display: table;
    }
  }

  #{$child-class} {
    float: left;
    @if $unit == 'percent' or $unit == '' or $unit != 'px' {
      $margin-right-percent: margin-right-px-to-percent($container-width-px, $margin-right-px);
      $margin-bottom-percent: margin-right-px-to-percent($container-width-px, $margin-bottom-px);
      margin-bottom: $margin-bottom-percent;
      margin-right: $margin-right-percent;
      width: (100% - (($number-columns - 1) * $margin-right-percent)) / $number-columns;
    }
    @if $unit == 'px' {
      margin-bottom: $margin-bottom-px * 1px;
      margin-right: $margin-right-px * 1px;
      width: round(($container-width-px - (($number-columns - 1) * $margin-right-px)) / $number-columns) * 1px;
    }
    @content;

    &:nth-child(#{$number-columns}n),
    &:last-child {
      margin-right: 0;
    }

    &:nth-child(#{$number-columns}n+1) {
      clear: both;
    }
  }
}

@mixin grid-column-inline($container-width-px, $number-columns, $margin-right-px, $margin-bottom-px: $margin-right-px, $unit: 'percent') {
  float: left;
  @if $unit == 'percent' or $unit == '' or $unit != 'px' {
    $margin-right-percent: margin-right-px-to-percent($container-width-px, $margin-right-px);
    $margin-bottom-percent: margin-right-px-to-percent($container-width-px, $margin-bottom-px);
    margin-bottom: $margin-bottom-percent;
    margin-right: $margin-right-percent;
    width: (100% - (($number-columns - 1) * $margin-right-percent)) / $number-columns;
  }
  @if $unit == 'px' {
    margin-bottom: $margin-bottom-px * 1px;
    margin-right: $margin-right-px * 1px;
    width: round(($container-width-px - (($number-columns - 1) * $margin-right-px)) / $number-columns) * 1px;
  }

  &:nth-child(#{$number-columns}n), &:last-child {
    margin-right: 0;
  }

  &:nth-child(#{$number-columns}n+1) {
    clear: both;
  }
}

//@mixin box-sizing($box-model: border-box) {
//  -webkit-box-sizing: $box-model;
//  -moz-box-sizing: $box-model;
//  box-sizing: $box-model;
//}
//
//@mixin appearance($appearance) {
//  -webkit-appearance: $appearance;
//  -moz-appearance: $appearance;
//  appearance: $appearance;
//}
//
//@mixin border-radius($radius...) {
//  -webkit-border-radius: $radius;
//  -moz-border-radius: $radius;
//  border-radius: $radius;
//}
//
//@mixin box-shadow($shadow...) {
//  -webkit-box-shadow: $shadow;
//  -moz-box-shadow: $shadow;
//  box-shadow: $shadow;
//}
//
//@mixin selection($background-color, $color) {
//  &::-moz-selection {
//    background-color: $background-color;
//    color: $color;
//  }
//
//  &::selection {
//    background-color: $background-color;
//    color: $color;
//  }
//}
